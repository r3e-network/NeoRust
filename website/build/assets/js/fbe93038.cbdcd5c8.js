"use strict";(self.webpackChunkneorust_website=self.webpackChunkneorust_website||[]).push([[1133],{3504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"testing","title":"Testing Documentation","description":"This document outlines the testing strategy and testing practices for the Neo Rust Website.","source":"@site/docs/testing.md","sourceDirName":".","slug":"/testing","permalink":"/docs/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/R3E-Network/NeoRust/tree/main/website/docs/testing.md","tags":[],"version":"current","lastUpdatedBy":"Jimmy","lastUpdatedAt":1742436035000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start","permalink":"/docs/getting-started/quick-start"}}');var i=t(4848),o=t(8453);const c={},r="Testing Documentation",l={},a=[{value:"Testing Strategy",id:"testing-strategy",level:2},{value:"Test Files Structure",id:"test-files-structure",level:2},{value:"Types of Tests",id:"types-of-tests",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Blockchain Data Tests",id:"blockchain-data-tests",level:3},{value:"Running Tests",id:"running-tests",level:2},{value:"Mocking",id:"mocking",level:2},{value:"Testing the Blockchain Info Component",id:"testing-the-blockchain-info-component",level:2},{value:"Example Blockchain Info Test",id:"example-blockchain-info-test",level:3},{value:"Writing New Tests",id:"writing-new-tests",level:2},{value:"Continuous Integration",id:"continuous-integration",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"testing-documentation",children:"Testing Documentation"})}),"\n",(0,i.jsx)(n.p,{children:"This document outlines the testing strategy and testing practices for the Neo Rust Website."}),"\n",(0,i.jsx)(n.h2,{id:"testing-strategy",children:"Testing Strategy"}),"\n",(0,i.jsx)(n.p,{children:"The website uses Jest and React Testing Library for testing components and functionality. Our testing approach follows these principles:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component-focused testing"}),": Each UI component should have its own test file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Behavior-driven"}),": Tests focus on behavior rather than implementation details."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User-centric"}),": Tests should simulate user interactions and verify expected outcomes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mocking external dependencies"}),": External services and APIs are mocked to ensure tests are reliable and fast."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"test-files-structure",children:"Test Files Structure"}),"\n",(0,i.jsxs)(n.p,{children:["Tests are located in the ",(0,i.jsx)(n.code,{children:"src/__tests__"})," directory and follow a naming convention:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ComponentName.test.tsx"})," - for component tests"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"types-of-tests",children:"Types of Tests"}),"\n",(0,i.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,i.jsx)(n.p,{children:"Test individual components in isolation, mocking any dependencies."}),"\n",(0,i.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,i.jsx)(n.p,{children:"Test interactions between multiple components or functionalities."}),"\n",(0,i.jsx)(n.h3,{id:"blockchain-data-tests",children:"Blockchain Data Tests"}),"\n",(0,i.jsxs)(n.p,{children:["Special tests for blockchain data components like ",(0,i.jsx)(n.code,{children:"BlockchainInfo.test.tsx"})," that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mock API responses"}),"\n",(0,i.jsx)(n.li,{children:"Test loading states"}),"\n",(0,i.jsx)(n.li,{children:"Test error handling"}),"\n",(0,i.jsx)(n.li,{children:"Verify periodic updates"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"running-tests",children:"Running Tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Run all tests\nnpm test\n\n# Run tests with coverage reporting\nnpm run test:coverage\n\n# Run tests in watch mode\nnpm test:watch\n\n# Run a specific test file\nnpm run test:file src/__tests__/ComponentName.test.tsx\n"})}),"\n",(0,i.jsx)(n.h2,{id:"mocking",children:"Mocking"}),"\n",(0,i.jsx)(n.p,{children:"The tests use Jest's mocking capabilities to mock external dependencies:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Axios for API requests"}),"\n",(0,i.jsx)(n.li,{children:"Gatsby components (Link, StaticImage)"}),"\n",(0,i.jsx)(n.li,{children:"Third-party components (Particles, etc.)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing-the-blockchain-info-component",children:"Testing the Blockchain Info Component"}),"\n",(0,i.jsxs)(n.p,{children:["The blockchain info component on the homepage displays live data from the Neo blockchain. The ",(0,i.jsx)(n.code,{children:"BlockchainInfo.test.tsx"})," file provides comprehensive tests for this component, including:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Initial loading state"}),": Tests that loading indicators are shown while data is being fetched."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data display"}),": Tests that blockchain data is correctly displayed after fetching."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Refresh functionality"}),": Tests that clicking the refresh button triggers a new data fetch."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error handling"}),": Tests the component's behavior when API requests fail."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic updates"}),": Tests that the component updates data automatically on the specified interval."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cleanup"}),": Tests that intervals are properly cleaned up when the component unmounts."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-blockchain-info-test",children:"Example Blockchain Info Test"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"it('fetches and displays blockchain information', async () => {\n  render(<IndexPage />);\n  \n  // Wait for data to be loaded and displayed\n  await screen.findByText('12,344'); // Block height\n  \n  // Verify all blockchain info is displayed\n  expect(screen.getByText('12,344')).toBeInTheDocument();\n  expect(screen.getByText('123456...abcdef')).toBeInTheDocument();\n  expect(screen.getByText('10')).toBeInTheDocument();\n  expect(screen.getByText('/Neo:3.5.0/')).toBeInTheDocument();\n  \n  // Verify the API calls were made\n  expect(mockAxios.post).toHaveBeenCalledTimes(3);\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"writing-new-tests",children:"Writing New Tests"}),"\n",(0,i.jsx)(n.p,{children:"When writing new tests, follow these guidelines:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a test file in the ",(0,i.jsx)(n.code,{children:"src/__tests__"})," directory"]}),"\n",(0,i.jsx)(n.li,{children:"Import necessary testing utilities and the component to test"}),"\n",(0,i.jsx)(n.li,{children:"Mock any external dependencies"}),"\n",(0,i.jsxs)(n.li,{children:["Structure your tests with ",(0,i.jsx)(n.code,{children:"describe"})," and ",(0,i.jsx)(n.code,{children:"it"})," blocks"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"render"})," to mount your component"]}),"\n",(0,i.jsxs)(n.li,{children:["Query elements using ",(0,i.jsx)(n.code,{children:"screen"})," methods"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"fireEvent"})," to simulate user interactions"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"act"})," for asynchronous operations"]}),"\n",(0,i.jsxs)(n.li,{children:["Make assertions with ",(0,i.jsx)(n.code,{children:"expect"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,i.jsx)(n.p,{children:"All tests run automatically in the CI pipeline. A test failure will prevent deployment."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(6540);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);